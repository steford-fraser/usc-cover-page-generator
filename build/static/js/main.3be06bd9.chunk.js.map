{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","renderCoverPage","event","preventDefault","doc","setFontSize","setFont","setFontType","writeText","align","state","assig_name","course_name","instruct_name","student_name","moment","date","format","save","window","location","reload","M","AutoInit","document","addEventListener","elems","querySelectorAll","Sidenav","init","this","jsPDF","orientation","unit","x","y","text","options","defaults","width","internal","pageSize","settings","$","extend","fontSize","getFontSize","txtWidth","getStringUnitWidth","scaleFactor","style","display","flexDirection","height","justifyContent","backgroundColor","className","href","data-target","id","onSubmit","type","value","onChange","setState","target","placeholder","required","htmlFor","name","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3be06bd9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\nimport jsPDF from 'jspdf';\r\nimport moment from 'moment';\r\nimport 'materialize-css/dist/css/materialize.css'\r\nimport M from \"materialize-css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      assig_name: '',\r\n      course_name: '',\r\n      instruct_name: '',\r\n      student_name: '',\r\n      date: ''\r\n    }\r\n\r\n  }\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.sidenav');\r\n      var instances = M.Sidenav.init(elems, {});\r\n    });\r\n\r\n    this.doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: \"mm\",\r\n      format: \"letter\"\r\n    })\r\n\r\n    this.doc.writeText = function (x, y, text, options) {\r\n      options = options || {};\r\n\r\n      var defaults = {\r\n        align: 'left',\r\n        width: this.internal.pageSize.width\r\n      }\r\n\r\n      var settings = $.extend({}, defaults, options);\r\n\r\n      // Get current font size\r\n      var fontSize = this.internal.getFontSize();\r\n\r\n      // Get the actual text's width\r\n      /* You multiply the unit width of your string by your font size and divide\r\n       * by the internal scale factor. The division is necessary\r\n       * for the case where you use units other than 'pt' in the constructor\r\n       * of jsPDF.\r\n      */\r\n      var txtWidth = this.getStringUnitWidth(text) * fontSize / this.internal.scaleFactor;\r\n\r\n      if (settings.align === 'center')\r\n        x += (settings.width - txtWidth) / 2;\r\n      else if (settings.align === 'right')\r\n        x += (settings.width - txtWidth);\r\n\r\n      //default is 'left' alignment\r\n      this.text(text, x, y);\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  renderCoverPage = (event) => {\r\n    event.preventDefault();\r\n    this.doc.setFontSize(12);//Font Size: 12\r\n    this.doc.setFont(\"times\");//Font: Times new Roman\r\n    this.doc.setFontType(\"bold\");//Font Type: Bold\r\n    //Header\r\n    this.doc.writeText(0, 20, \"UNIVERSITY OF THE SOUTHERN CARIBBEAN\", { align: 'center' });\r\n    this.doc.writeText(0, 25, \"MARACAS ROYAL ROAD, MARACAS, ST. JOSEPH.\", { align: 'center' });\r\n\r\n    this.doc.setFontType(\"normal\");//Font Type: Normal\r\n    //Assignment Name\r\n    this.doc.writeText(0, 70, this.state.assig_name, { align: 'center' });\r\n    //Decleration\r\n    this.doc.writeText(0, 105, \"An Assignment\", { align: 'center' });\r\n    this.doc.writeText(0, 110, \"Presented in Partial Fulfilment\", { align: 'center' });\r\n    this.doc.writeText(0, 115, \"of the Requirements for the Course\", { align: 'center' });\r\n    //Course Name\r\n    this.doc.writeText(0, 120, this.state.course_name, { align: 'center' });\r\n    //Instructor Name\r\n    this.doc.writeText(0, 150, \"INSTRUCTOR: \" + this.state.instruct_name, { align: 'center' });\r\n    //Student Name\r\n    this.doc.writeText(0, 190, \"By\", { align: 'center' });\r\n    this.doc.writeText(0, 200, this.state.student_name, { align: 'center' });\r\n    this.doc.writeText(0, 210, moment(this.state.date).format('DD MMMM YYYY'), { align: 'center' });\r\n    //End\r\n    this.doc.writeText(0, 250, \"Approval…….............                     \", { align: 'right' });\r\n    this.doc.save('cover-page.pdf')\r\n\r\n    //Reload page to clear written text\r\n    window.location.reload();\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', justifyContent: 'space-between' }}>\r\n        <nav style={{ backgroundColor: '#477D2F' }}>\r\n          <div className=\"nav-wrapper\">\r\n            <a href=\"#\" className=\"brand-logo\">USC Cover Page Generator</a>\r\n            <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n              <li><a href=\"https://github.com/steford-fraser/usc-cover-page-generator\">Contribute on Github</a></li>\r\n            </ul>\r\n\r\n          </div>\r\n        </nav>\r\n\r\n        <ul className=\"sidenav\" id=\"mobile-demo\">\r\n          <li><a href=\"sass.html\">Sass</a></li>\r\n          <li><a href=\"badges.html\">Components</a></li>\r\n          <li><a href=\"collapsible.html\">Javascript</a></li>\r\n          <li><a href=\"mobile.html\">Mobile</a></li>\r\n        </ul>\r\n\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12\">\r\n              <form onSubmit={this.renderCoverPage}>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    className=\"validate\"\r\n                    type=\"text\"\r\n                    value={this.state.assig_name}\r\n                    onChange={event => this.setState({ assig_name: event.target.value })}\r\n                    placeholder=\"Assignment Name\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"first_name\">Assignment Name</label>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.course_name}\r\n                    onChange={event => this.setState({ course_name: event.target.value })}\r\n                    placeholder=\"Course Name\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"first_name\">Course Name</label>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.instruct_name}\r\n                    onChange={event => this.setState({ instruct_name: event.target.value })}\r\n                    placeholder=\"Instructor Name\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"first_name\">Instructor Name</label>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.student_name}\r\n                    onChange={event => this.setState({ student_name: event.target.value })}\r\n                    placeholder=\"Student Name\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"first_name\">Student Name</label>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    type='date'\r\n                    value={this.state.date}\r\n                    onChange={event => this.setState({ date: event.target.value })}\r\n                    placeholder=\"Date\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"first_name\">Date</label>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Generate Cover Page\r\n                <i className=\"material-icons right\">send</i>\r\n                </button>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer style={{ backgroundColor: '#477D2F' }} className=\"page-footer\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">Incase you were wondering</h5>\r\n                <p className=\"grey-text text-lighten-4\">These are the packages I used to create this.</p>\r\n              </div>\r\n              <div className=\"col l4 offset-l2 s12\">\r\n                <h5 className=\"white-text\">Links</h5>\r\n                <ul>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/MrRio/jsPDF\">jsPDF</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://reactjs.org/\">React Js</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://jquery.com/\">jQuery</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://momentjs.com/\">Moment.js</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n              By Steford Fraser @ 2015\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}